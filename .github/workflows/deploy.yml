# .github/workflows/deploy.yml

name: Deploy 

on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Deploy job
  deploy:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v4
      - name: Setup dir
        run: mkdir -p build
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install deno depedencies
        # Using npm install because threlte is annoying
        # https://github.com/threlte/threlte/issues/1453
        run: npm install
        working-directory: svelte
      - name: Run svelte build
        env: 
          BASE_PATH: '/${{ github.event.repository.name }}/svelte'
        run: deno task build
        working-directory: svelte
      - name: Copy svelte output
        run: cp -r ./svelte/build ./build && mv ./build/build ./build/svelte

      - name: Setup elm
        uses: jorelali/setup-elm@v6
        with:
          elm-version: 0.19.1
      - name: Run elm build
        env: 
          BASE_PATH: '${{ github.event.repository.name }}/elm'
        run: deno task build
        working-directory: elm
      - name: Copy elm output
        run: cp -r ./elm ./build

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: wasm32-unknown-unknown
          override: true
      - name: Setup Trunk
        uses: jetli/trunk-action@v0.5.0
        with:
          version: 'latest'
      - name: Run iced build
        run: trunk build --release
        working-directory: iced
      - name: Copy iced output
        run: cp -r ./iced/dist ./build && mv ./build/dist ./build/iced

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Setup wasm-tools
        run: dotnet workload install wasm-tools
      - name: Setup bolero env
        env:
          BASE_PATH: '${{ github.event.repository.name }}/bolero'
        run: deno task setup-env
        working-directory: BoleroApp
      - name: Run bolero build
        run: dotnet publish src/BoleroApp.Client/BoleroApp.Client.fsproj -o build
        working-directory: BoleroApp
      - name: Copy bolero output over
        run: cp -r ./BoleroApp/build/wwwroot ./build && mv ./build/wwwroot ./build/bolero

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # upload build folder
          path: './build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 